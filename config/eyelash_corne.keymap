#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <8 9>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <3 4>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <5 4>;
        };

        double_quote {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <25 26>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <10 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R        &kp T                          &kp UP                &kp Y          &kp U        &kp I      &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D     &kp F        &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H          &kp J        &kp K      &kp L    &kp SEMI  &kp RET
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V        &kp B  &kp C_MUTE              &kp DOWN              &kp N          &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LGUI  &lt 1 SPACE  &mo 3                                                &kp RIGHT_ALT  &lt 1 SPACE  &mo 2
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        number_layer {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE  &kp N1           &kp N2       &kp N3            &kp N4          &kp N5                                         &mmv MOVE_UP                     &kp N6             &kp N7           &kp N8             &kp N9                &kp N0                 &kp MINUS
&trans     &kp EXCLAMATION  &kp AT_SIGN  &kp HASH          &kp DOLLAR      &kp PERCENT                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp CARET          &kp AMPERSAND    &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&trans     &kp PLUS         &kp EQUAL    &kp SINGLE_QUOTE  &kp LEFT_BRACE  &kp LEFT_BRACKET  &mkp LCLK                    &mmv MOVE_DOWN                   &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp DOUBLE_QUOTES  &kp UNDERSCORE        &trans                 &trans
                                         &trans            &trans          &trans                                                                          &trans             &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        fn_layer {
            display-name = "Fn";
            bindings = <
&kp ESCAPE  &kp F1  &kp F2  &kp F3  &kp F4        &kp F5                               &mmv MOVE_UP                     &kp F6      &kp F7    &kp F8        &kp F9           &kp F10  &none
&trans      &none   &none   &none   &none         &none                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT    &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW  &kp F11  &none
&trans      &none   &none   &none   &kp LEFT_ALT  &none   &mkp LCLK                    &mmv MOVE_DOWN                   &kp DELETE  &kp HOME  &kp END       &none            &kp F12  &trans
                            &trans  &trans        &trans                                                                &trans      &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        control_layer {
            display-name = "CONTROL";
            bindings = <
&none  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1                               &mmv MOVE_UP                     &none   &none   &none   &none  &none  &none
&none  &to 0            &to 1            &to 2           &to 4         &none                      &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none   &none   &none   &none  &none  &none
&none  &none            &none            &none           &none         &none         &mkp LCLK                    &mmv MOVE_DOWN                   &none   &none   &none   &none  &none  &none
                                         &trans          &trans        &trans                                                                      &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        dup_layer {
            display-name = "DUP";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R      &kp T                          &kp UP                &kp Y          &kp U        &kp I      &kp O    &kp P     &kp BSPC
&td0       &kp A  &kp S  &kp D     &kp F      &kp G                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H          &kp J        &kp K      &kp L    &kp SEMI  &kp RET
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V      &kp B  &kp C_MUTE              &kp DOWN              &kp N          &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                         &kp LGUI  &kp SPACE  &mo 3                                                &kp RIGHT_ALT  &lt 1 SPACE  &mo 2
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
